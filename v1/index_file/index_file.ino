/**
 * @note
 * THIS SKETCH IS USED TO UPLOAD THE HTML CODE
 * FOR THE WEB PAGE IN THE ESP32 FILE SYSTEM.
 */

#include <LittleFS.h>

void setup() {
    LittleFS.begin(true);
    File indexFile = LittleFS.open("/index.html", "w", true);
    indexFile.print(
      "<!DOCTYPE html>\n<html lang='en'>\n<head>\n    <meta charset='UTF-8'>\n    <meta name='viewport' content='width=device-width, initial-scale=1.0'>\n    <title>Doorlock</title>\n    <style>\n        * {\n            margin: 0;\n            padding: 0;\n            box-sizing: border-box;\n        }\n\n        body {\n            display: flex;\n            align-items: center;\n            justify-content: center;\n            min-height: 100vh;\n            min-width: 100vw;\n            background: rgb(33, 33, 33);\n            color: rgb(235, 225, 225);\n            font-family: 'Source Code Pro', 'Courier New', Courier, monospace;\n        }\n\n        main {\n            display: flex;\n            flex-direction: column;\n            align-items: center;\n            justify-content: center;\n        }\n\n        table {\n            width: min(90vw, 40rem);\n            margin: 1rem 0;\n        }\n\n        td, th {\n            border: 0.15rem solid white;\n            padding: 0.2rem 1rem;\n        }\n\n        th {\n            padding: 1rem;\n        }\n\n        h3 {\n            text-align: center;\n        }\n\n        button {\n            width: 5rem;\n            height: 2rem;\n            background-color: #24ff5e;\n            color: #212121;\n            outline: none;\n            border: none;\n            border-radius: 0.5rem;\n            font-weight: bold;\n            font-size: 1rem;\n            margin: 0.2rem;\n            font-family: 'Source Code Pro', 'Courier New', Courier, monospace;\n        }\n\n        button:active {\n            transform: scale(0.96);\n        }\n    </style>\n</head>\n\n<body>\n    <main>\n        <table>\n            <tr>\n                <th colspan='2'><h3>Fingerprint Sensor</h3></th>\n            </tr>\n            <tr>\n                <td>Status</td>\n                <td id='finger-status'>false</td>\n            </tr>\n            <tr>\n                <td>Admin fingerprints</td>\n                <td id='admin-count'>0</td>\n            </tr>\n            <tr>\n                <td>Registered fingerprints</td>\n                <td id='finger-count'>0</td>\n            </tr>\n            <tr>\n                <td>Last fingerprint location</td>\n                <td id='last-fingerprint'>0</td>\n            </tr>\n            <tr>\n                <th colspan='2'><h3>IR Sensor</h3></th>\n            </tr>\n            <tr>\n                <td>Last IR key</td>\n                <td id='last-ir-key'>-</td>\n            </tr>\n            <tr>\n                <th colspan='2'><h3>Door</h3></th>\n            </tr>\n            <tr>\n                <td>Last opened</td>\n                <td><span id='door-open-second'>0</span>s</td>\n            </tr>\n            <tr>\n                <td>Reason</td>\n                <td id='door-open-reason'>-</td>\n            </tr>\n            <tr>\n                <td>Status</td>\n                <td><h3><button id='door-status'>Closed</button></h3></td>\n            </tr>\n        </table>\n    </main>\n</body>\n\n<script src='https://cdnjs.cloudflare.com/ajax/libs/crypto-js/4.2.0/crypto-js.min.js' integrity='sha512-a+SUDuwNzXDvz4XrIcXHuCf089/iJAoN4lmrXJg18XnduKK6YlDHNRalv4yd1N40OKI80tFidF+rqTFKGPoWFQ==' crossorigin='anonymous' referrerpolicy='no-referrer'></script>\n\n<script>\n    const doorOpenColor = '#ffe624';\n    const doorClosedColor = '#24ff5e';\n\n    const fieldIDs = [\n        'finger-status',\n        'admin-count',\n        'finger-count',\n        'last-fingerprint',\n        'last-ir-key',\n        'door-open-second',\n        'door-open-reason',\n        'door-status'\n    ];\n\n    async function updateData() {\n        const response = await fetch('/status');\n        const json = await response.json();\n        fieldIDs.forEach((field) => {\n            document.getElementById(field).textContent = json[field];\n        });\n        const doorButton = document.getElementById('door-status');\n        if (doorButton.textContent === 'Closed') {\n            doorButton.style.backgroundColor = doorClosedColor;\n        } else {\n            doorButton.style.backgroundColor = doorOpenColor;\n        }\n    }\n\n    setInterval(() => {updateData().then()}, 1000);\n</script>\n\n<script>\n    function getHash(message) {\n        return CryptoJS.SHA1(message).toString();\n    }\n    \n    document.getElementById('door-status').addEventListener('click', (event) => {\n        event.preventDefault();\n        fetch('/opendoor', {method: 'POST'}).then();\n    });\n</script>\n\n</html>\n"
    );
    indexFile.flush();
    indexFile.close();
    LittleFS.end();
}

void loop() {

}
